@use "sass:math";
@mixin breakpoint($value) {
	// need to validate $value

	// if a string use standard breakpoints
	@if type-of($value)=='string' {
		@if ($value =="xs" or $value =="phone") {
			@media (max-width: 699px) {
				@content;
			}
		}

		@else if ($value =="sm" or $value =="tablet") {
			@media (min-width: 700px) {
				@content;
			}
		}

		@else if ($value =="md" or $value =="laptop") {
			@media(min-width: 980px) {
				@content;
			}
		}

		@else if($value =="lg" or $value =="desktop") {
			@media (min-width: 1140px) {
				@content;
			}
		}

		@else if($value =="xl" or $value =="tvscreen") {
			@media (min-width: 1260px) {
				@content;
			}
		}

		@else {
			@warn "Breakpoint mixin supports: xs or phone, sm or tablet, md or laptop, lg or desktop, xl or tvscreen as string variables";
		}

	}

	// if value then use value as minimum width.
	@else if is-length($value) {
		@media(min-width: #{$value}) {
			@content;
		}
	}

	@else {
		@warn "Breakpoint mixin supports: string variables or relative units";
	}

	// if a length value than use that

	// error warn if string does not match or it is not a length

}

@mixin fontColors() {
	$colors: black, green, white, pink;
	@each $color in $colors {
		&.font-color-#{$color} {
			color: $color;
		}
	}
}
@mixin textAligns() {
	$alignments: left, center, right, justify;

	@each $alignment in $alignments {
		&.text-align-#{$alignment} {
			text-align: $alignment;
		}
	}
}
@mixin margins() {
	$sides: top, right, bottom, left;
	@each $side in $sides {
		@for $i from 1 through 12 {
			&.margin-#{$side}-#{$i} {
				margin-#{$side}: #{math.div($i, 2)}rem;
			}
		}
		
	}
}
@mixin paddings() {
	$sides: top, right, bottom, left;
	@each $side in $sides {
		@for $i from 1 through 12 {
			&.padding-#{$side}-#{$i} {
				padding-#{$side}: #{math.div($i, 2)}rem;
			}
		}
		
	}
}
@mixin justifyContents() {
	$values: flex-start, flex-end, center, space-between, space-around, space-evenly;
	@each $value in $values {
		&.justify-content-#{$value} {
			justify-content: $value;
		}
	}
}